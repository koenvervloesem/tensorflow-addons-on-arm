diff -ruN addons-0.7.1/build_pip_pkg.sh addons-0.7.1-2/build_pip_pkg.sh
--- addons-0.7.1/build_pip_pkg.sh	2020-01-23 21:56:44.000000000 +0000
+++ addons-0.7.1-2/build_pip_pkg.sh	2020-07-04 16:30:41.525089480 +0100
@@ -72,9 +72,9 @@
 
   if [[ -z ${BUILD_FLAG} ]]; then
     # Windows has issues with locking library files for deletion so do not fail here
-    ${PYTHON_VERSION:=python} setup.py bdist_wheel || true
+    ${PYTHON_VERSION:=python3} setup.py bdist_wheel || true
   else
-    ${PYTHON_VERSION:=python} setup.py bdist_wheel "${2}" || true
+    ${PYTHON_VERSION:=python3} setup.py bdist_wheel "${2}" || true
   fi
 
   cp dist/*.whl "${DEST}"
@@ -83,4 +83,4 @@
   echo $(date) : "=== Output wheel file is in: ${DEST}"
 }
 
-main "$@"
\ No newline at end of file
+main "$@"
diff -ruN addons-0.7.1/configure.sh addons-0.7.1-2/configure.sh
--- addons-0.7.1/configure.sh	2020-01-23 21:56:44.000000000 +0000
+++ addons-0.7.1-2/configure.sh	2020-07-04 16:29:33.866337515 +0100
@@ -78,7 +78,7 @@
 fi
 
 BRANCH=$(git rev-parse --abbrev-ref HEAD)
-PYTHON_PATH=$(which python)
+PYTHON_PATH=$(which python3)
 REQUIRED_PKG=$(cat requirements.txt)
 
 if [[ ${BRANCH} == "master" ]]; then
@@ -89,13 +89,13 @@
 echo ""
 echo "> TensorFlow Addons will link to the framework in a pre-installed TF pacakge..."
 echo "> Checking installed packages in ${PYTHON_PATH}"
-python build_deps/check_deps.py
+python3 build_deps/check_deps.py
 
 if [[ $? == 1 ]]; then
   read -r -p "Package ${REQUIRED_PKG} will be installed. Are You Sure? [y/n] " reply
   case $reply in
       [yY]*) echo "> Installing..."
-         python -m pip install $PIP_INSTALL_OPTS -r requirements.txt;;
+         python3 -m pip install $PIP_INSTALL_OPTS -r requirements.txt;;
       * ) echo "> Exiting..."; exit;;
   esac
 else
@@ -104,16 +104,16 @@
 
 [[ -f .bazelrc ]] && rm .bazelrc
 
-TF_CFLAGS=($(python -c 'import logging; logging.disable(logging.WARNING);import tensorflow as tf; print(" ".join(tf.sysconfig.get_compile_flags()))'))
-TF_LFLAGS=($(python -c 'import logging; logging.disable(logging.WARNING);import tensorflow as tf; print(" ".join(tf.sysconfig.get_link_flags()))'))
-TF_CXX11_ABI_FLAG=($(python -c 'import logging; logging.disable(logging.WARNING);import tensorflow as tf; print(tf.sysconfig.CXX11_ABI_FLAG)'))
+TF_CFLAGS=($(python3 -c 'import logging; logging.disable(logging.WARNING);import tensorflow as tf; print(" ".join(tf.sysconfig.get_compile_flags()))'))
+TF_LFLAGS=($(python3 -c 'import logging; logging.disable(logging.WARNING);import tensorflow as tf; print(" ".join(tf.sysconfig.get_link_flags()))'))
+TF_CXX11_ABI_FLAG=($(python3 -c 'import logging; logging.disable(logging.WARNING);import tensorflow as tf; print(tf.sysconfig.CXX11_ABI_FLAG)'))
 
 TF_SHARED_LIBRARY_NAME=$(generate_shared_lib_name ${TF_LFLAGS[1]})
 TF_HEADER_DIR=${TF_CFLAGS:2}
 
 # OS Specific parsing
 if is_windows; then
-  TF_SHARED_LIBRARY_DIR=${TF_CFLAGS:2:-7}"python"
+  TF_SHARED_LIBRARY_DIR=${TF_CFLAGS:2:-7}"python3"
   TF_SHARED_LIBRARY_DIR=${TF_SHARED_LIBRARY_DIR//\\//}
 
   TF_SHARED_LIBRARY_NAME=${TF_SHARED_LIBRARY_NAME//\\//}
diff -ruN addons-0.7.1/tensorflow_addons/text/__init__.py addons-0.7.1-2/tensorflow_addons/text/__init__.py
--- addons-0.7.1/tensorflow_addons/text/__init__.py	2020-01-23 21:56:44.000000000 +0000
+++ addons-0.7.1-2/tensorflow_addons/text/__init__.py	2020-07-04 16:29:33.866337515 +0100
@@ -39,5 +39,5 @@
 # Temporarily disable for windows
 # Remove after: https://github.com/tensorflow/addons/issues/782
 import os
-if os.name != 'nt':
+if os.name != 'nt' and os.uname()[4] != 'armv7l':
     from tensorflow_addons.text.parse_time_op import parse_time
